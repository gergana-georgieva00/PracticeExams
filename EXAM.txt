create database Boardgames

use Boardgames

create table Categories
(
	Id int primary key identity,
	[Name] varchar(50) not null
)

create table Addresses
(
	Id int primary key identity,
	StreetName nvarchar(100) not null,
	StreetNumber int not null,
	Town varchar(30) not null,
	Country varchar(50) not null,
	ZIP int not null
)

create table Publishers
(
	Id int primary key identity,
	[Name] varchar(30) unique not null,
	AddressId int foreign key references Addresses(Id) not null,
	Website nvarchar(40),
	Phone nvarchar(20)
)

create table PlayersRanges
(
	Id int primary key identity,
	PlayersMin int not null,
	PlayersMax int not null
)

create table Boardgames
(
	Id int primary key identity,
	[Name] nvarchar(30) not null,
	YearPublished int not null,
	Rating decimal(2) not null,
	CategoryId int foreign key references Categories(Id) not null,
	PublisherId int foreign key references Publishers(Id) not null,
	PlayersRangeId int foreign key references PlayersRanges(Id) not null
)

create table Creators
(
	Id int primary key identity,
	FirstName nvarchar(30) not null,
	LastName nvarchar(30) not null,
	Email nvarchar(30) not null
)

create table CreatorsBoardgames
(
	CreatorId int not null,
	BoardgameId int not null,
	primary key (CreatorId, BoardgameId),
	foreign key(CreatorId) references Creators(Id),
	foreign key(BoardgameId) references Boardgames(Id)
)
insert into Boardgames
values
('Deep Blue', 2019, 5.67, 1, 15, 7),
('Paris', 2016, 9.78, 7, 1, 5),
('Catan: Starfarers', 2021, 9.87, 7, 13, 6),
('Bleeding Kansas', 2020, 3.25, 3, 7, 4),
('One Small Step', 2019, 5.75, 5, 9, 2)

insert into Publishers
values
('Agman Games', 5, 'www.agmangames.com', '+16546135542'),
('Amethyst Games', 7, 'www.amethystgames.com', '+15558889992'),
('BattleBooks', 13, 'www.battlebooks.com', '+12345678907')

update PlayersRanges 
set PlayersMax += 1
where PlayersMin = 2 and PlayersMax = 2

update Boardgames
set [Name] = concat([Name], 'V2')
where YearPublished >= 2020

declare @addressId int = (select Id from Addresses where charindex('L', Town) = 1)
--declare @publisherId int = (select Id from Publishers where AddressId = @addressId)

delete from CreatorsBoardgames
where BoardgameId in (select Id from Boardgames where PublisherId in (select Id from Publishers where AddressId = @addressId))
delete from BoardGames
where PublisherId in (select Id from Publishers where AddressId = @addressId)
delete from Publishers
where AddressId = @addressId 
delete from Addresses
where Id = @addressId 

--5
select [Name], Rating 
from Boardgames as g
order by g.YearPublished asc, [Name] desc

--6
select g.Id, g.[Name], g.YearPublished, c.[Name]
from Boardgames as g
join Categories as c on g.CategoryId = c.Id
where c.[Name] in ('Strategy Games', 'Wargames')
order by YearPublished desc

--7
select
c.Id, 
concat(c.FirstName, ' ', c.LastName) as CreatorName,
c.Email
from Creators as c
left join CreatorsBoardgames as cb on c.Id = cb.CreatorId
where cb.BoardgameId is null
order by CreatorName asc

--8
select 
top 5
g.[Name], g.Rating, c.[Name]
from Boardgames as g 
join Categories as c on g.CategoryId = c.Id
join PlayersRanges as pr on g.PlayersRangeId = pr.Id
where (g.Rating >= 7.0 and g.[Name] like '%a%') or (g.Rating > 7.50 and pr.PlayersMin = 2 and pr.PlayersMax = 5)
order by g.[Name] asc, g.Rating desc




--9
select distinct
FullName, Email, Rating from
(
select 
concat(c.FirstName, ' ', c.LastName) as FullName, 
c.Email, 
g.Rating,
dense_rank() over (partition by FirstName, LastName order by g.Rating desc) as [DenseRank]
from Creators as c
join CreatorsBoardgames as cb on c.Id = cb.CreatorId
join Boardgames as g on cb.BoardgameId = g.Id
where Email like '%.com'
) 
as [SelectClause]
where [DenseRank] = 1
order by FullName asc




--10
select
c.LastName,
ceiling(avg(g.Rating)) as AverageRating,
p.[Name]
from Creators as c
join CreatorsBoardgames as cg on c.Id = cg.CreatorId
join Boardgames as g on cg.BoardgameId = g.Id
join Publishers as p on g.PublisherId = p.Id
group by c.LastName, p.[Name]
having p.[Name] = 'Stonemaier Games'
order by avg(g.Rating) desc

