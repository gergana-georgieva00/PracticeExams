create database Zoo

create table Owners
(
	Id int primary key identity,
	[Name] varchar(50) not null,
	PhoneNumber varchar(15) not null,
	[Address] varchar(50)
)

create table AnimalTypes
(
	Id int primary key identity,
	AnimalType varchar(30) not null
)

create table Cages
(
	Id int primary key identity,
	AnimalTypeId int foreign key references AnimalTypes(Id) not null
)

create table Animals
(
	Id int primary key identity,
	[Name] varchar(30) not null,
	BirthDate Date not null,
	OwnerId int foreign key references Owners(Id),
	AnimalTypeId int foreign key references AnimalTypes(Id) not null
)

create table AnimalsCages
(
	CageId int not null,
	AnimalId int not null,
	primary key(CageId, AnimalId),
	foreign key (CageId) references Cages(Id),
	foreign key (AnimalId) references Animals(Id)
)

create table VolunteersDepartments
(
	Id int primary key identity,
	DepartmentName varchar(30) not null
)

create table Volunteers
(
	Id int primary key identity,
	[Name] varchar(50) not null,
	PhoneNumber varchar(15) not null,
	[Address] varchar(50),
	AnimalId int foreign key references Animals(Id),
	DepartmentId int foreign key references VolunteersDepartments(Id) not null
)

use Zoo
insert into Volunteers
values 
('Anita Kostova', '0896365412', 'Sofia, 5 Rosa str.', 15, 1),
('Dimitur Stoev', '0877564223', null, 42, 4),
('Kalina Evtimova', '0896321112', 'Silistra, 21 Breza str.', 9, 7),
('Stoyan Tomov', '0898564100', 'Montana, 1 Bor str.', 18, 8),
('Boryana Mileva', '0888112233', null, 31, 5)

insert into Animals 
values
('Giraffe', '2018-09-21', 21, 1),
('Harpy Eagle', '2015-04-17', 15, 3),
('Hamadryas Baboon', '2017-11-02', null, 1),
('Tuatara', '2021-06-30', 2, 4)


update Animals
set OwnerId = (select Id from Owners where [Name] = 'Kaloqn Stoqnov')
where OwnerId is null

declare @departmentId int = (select Id from VolunteersDepartments where DepartmentName = 'Education program assistant');

delete from Volunteers
where DepartmentId = @departmentId
delete from VolunteersDepartments 
where Id = @departmentId

select
[Name], PhoneNumber, [Address], AnimalId, DepartmentId
from Volunteers
order by [Name] asc,
		 AnimalId asc,
		 DepartmentId asc
		 
select
a.[Name],
t.AnimalType,
format(BirthDate, 'dd.MM.yyyy') as BirthDate
from Animals as a
join AnimalTypes as t
on a.AnimalTypeId = t.Id
order by [Name] asc

select
top 5
o.[Name] as [Owner],
count(*) as CountOfAnimals
from Animals as a
join Owners as o on a.OwnerId = o.Id
group by o.[Name]
order by CountOfAnimals desc

select
concat(o.[Name], '-', a.[Name]) as OwnersAnimals,
o.PhoneNumber,
ac.CageId
from Owners as o
join Animals as a on o.Id = a.OwnerId
join AnimalsCages as ac on a.Id = ac.AnimalId
where a.AnimalTypeId = (select Id from AnimalTypes where AnimalType = 'Mammals')
order by o.[Name] asc,
		 a.[Name] desc
		 
select 
v.[Name],
v.PhoneNumber,
right(v.[Address], len(v.[Address]) - charindex(', ', v.[Address]))
from Volunteers as v
join VolunteersDepartments as vd on v.DepartmentId = vd.Id
where vd.DepartmentName = 'Education program assistant' and
CHARINDEX('Sofia', v.[Address], 1) > 0
order by v.[Name] asc

select 
a.[Name],
year(a.BirthDate) as BirthYear,
t.AnimalType
from Animals as a
join AnimalTypes as t on a.AnimalTypeId = t.Id
where a.OwnerId is null and 
datediff(year, a.BirthDate, '01/01/2022') < 5
and a.AnimalTypeId <> 3
order by a.[Name]

create function udf_GetVolunteersCountFromADepartment (@VolunteersDepartment varchar(100))
returns int
as
begin
	declare @departmentId int = (select Id from VolunteersDepartments where DepartmentName = @VolunteersDepartment)
	return (select count(*) from Volunteers where DepartmentId = @departmentId)
end

create proc usp_AnimalsWithOwnersOrNot
(@AnimalName varchar(100))
as

	declare @ownerId int = (select OwnerId from Animals where [Name] = @AnimalName)
	declare @ownerName varchar(100) = (select [Name] from Owners where Id = @ownerId)

	select distinct
	@AnimalName as [Name], 
	case 
		when @ownerName is null then 'For adoption'
		else @ownerName
	end as OwnersName
	from Animals as a

go