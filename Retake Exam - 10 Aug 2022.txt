create database NationalTouristSitesOfBulgaria

create table Categories
(
	Id int primary key not null identity,
	[Name] varchar(50) not null
)

create table Locations
(
	Id int primary key not null identity,
	[Name] varchar(50) not null,
	Municipality varchar(50),
	Province varchar(50)
)

create table Sites
(
	Id int primary key not null identity,
	[Name] varchar(100) not null,
	LocationId int foreign key references Locations(Id) not null,
	CategoryId int foreign key references Categories(Id) not null,
	Establishment varchar(15)
)

create table Tourists
(
	Id int primary key identity not null,
	[Name] varchar(50) not null,
	Age int check (Age between 0 and 120) not null,
	PhoneNumber varchar(20) not null,
	Nationality varchar(30) not null,
	Reward varchar(20)
)

create table SitesTourists
(
	TouristId int not null,
	SiteId int not null,
	primary key(TouristId, SiteId),
	foreign key (TouristId) references Tourists(Id),
	foreign key (SiteId) references Sites(Id)
)

create table BonusPrizes
(
	Id int primary key not null identity,
	[Name] varchar(50) not null
)

create table TouristsBonusPrizes
(
	TouristId int not null,
	BonusPrizeId int not null,
	primary key(TouristId, BonusPrizeId),
	foreign key(TouristId) references Tourists(Id),
	foreign key(BonusPrizeId) references BonusPrizes(Id)
)

insert into Tourists
values 
('Borislava Kazakova', 52, '+359896354244', 'Bulgaria', null),
('Peter Bosh', 48, '+447911844141', 'UK', null),
('Martin Smith', 29, '+353863818592', 'Ireland', 'Bronze badge'),
('Svilen Dobrev', 49, '+359986584786', 'Bulgaria', 'Silver badge'),
('Kremena Popova', 38, '+359893298604', 'Bulgaria', null)

insert into Sites
values
('Ustra fortress', 90, 7, 'X'),
('Karlanovo Pyramids', 65, 7, null),
('The Tomb of Tsar Sevt', 63, 8, 'V BC'),
('Sinite Kamani Natural Park', 17, 1, null),
('St. Petka of Bulgaria â€“ Rupite', 92, 6, '1994')

update Sites
set Establishment = '(not defined)'
where Establishment is null

delete from TouristsBonusPrizes
where BonusPrizeId = (select Id from BonusPrizes where [Name] = 'Sleeping bag')

delete from BonusPrizes
where [Name] = 'Sleeping bag'

use NationalTouristSitesOfBulgaria
select 
[Name], Age, PhoneNumber, Nationality
from Tourists
order by Nationality asc,
		 Age desc,
		 [Name] asc
		 
use NationalTouristSitesOfBulgaria
select 
s.[Name] as [Site], 
l.[Name] as [Location],
s.Establishment,
c.[Name] as Category
from Sites as s
join Locations as l on l.Id = s.LocationId
join Categories as c on c.Id = s.CategoryId
order by c.[Name] desc,
		 l.[Name] asc,
		 s.[Name] asc
		 
select 
l.Province,
l.Municipality,
l.[Name] as [Location],
count(*) as CountOfSites
from Locations as l
join Sites as s on l.Id = s.LocationId
where l.Province = 'Sofia'
group by l.Province, l.Municipality, l.[Name]
order by CountOfSites desc,
		 [Location] asc
		 

select 
s.[Name] as [Site],
l.[Name] as [Location],
l.Municipality,
l.Province,
s.Establishment
from Sites as s
join Locations as l on l.Id = s.LocationId
where substring(l.[Name], 1, 1) not in ('B', 'M', 'D')
and s.Establishment like '%BC'
order by s.[Name] asc

select
t.[Name],
t.Age,
t.PhoneNumber,
t.Nationality,
case 
	when bp.[Name] is null then '(no bonus prize)'
	else bp.[Name]
end as Reward
from Tourists as t
full join TouristsBonusPrizes as tbp on t.Id = tbp.TouristId
left join BonusPrizes as bp on tbp.BonusPrizeId = bp.Id
order by t.[Name] asc

select
distinct
substring(t.[Name], charindex(' ', t.[Name]) + 1, len(t.[Name])) as LastName,
t.Nationality,
t.Age,
t.PhoneNumber
from Tourists as t
join SitesTourists as st on t.Id = st.TouristId
join Sites as s on st.SiteId = s.Id
join Categories as c on s.CategoryId = c.Id
where c.[Name] = 'History and archaeology'
order by LastName asc

create function udf_GetTouristsCountOnATouristSite (@Site varchar(100))
returns int
as 
begin
	declare @siteId int = (select Id from Sites where [Name] = @Site);
	return (select count(*) from SitesTourists where SiteId = @siteId)
end

